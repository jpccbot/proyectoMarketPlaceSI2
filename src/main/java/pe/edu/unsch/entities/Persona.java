package pe.edu.unsch.entities;
// Generated 26/11/2020 11:03:24 PM by Hibernate Tools 5.1.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona", catalog = "marketplacebd")
public class Persona implements java.io.Serializable {

	private Integer idpersona;
	private Usuario usuario;
	private String nombre;
	private String apellido;
	private String telefono;
	private String foto;
	private String correo;
	private String numeroRuc;
	private Set<ProductoFavorito> productoFavoritos = new HashSet<ProductoFavorito>(0);
	private Set<PersonaRol> personaRols = new HashSet<PersonaRol>(0);
	private Set<Producto> productos = new HashSet<Producto>(0);
	private Set<Reporte> reportes = new HashSet<Reporte>(0);
	private Set<ValoracionVendedor> valoracionVendedorsForIdvendedor = new HashSet<ValoracionVendedor>(0);
	private Set<ValoracionVendedor> valoracionVendedorsForIdcomprador = new HashSet<ValoracionVendedor>(0);
	private Set<Factura> facturas = new HashSet<Factura>(0);
	private Set<PersonaDireccion> personaDireccions = new HashSet<PersonaDireccion>(0);
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);

	public Persona() {
	}

	public Persona(String correo) {
		this.correo = correo;
	}

	public Persona(Usuario usuario, String nombre, String apellido, String telefono, String foto, String correo,
			String numeroRuc, Set<ProductoFavorito> productoFavoritos, Set<PersonaRol> personaRols,
			Set<Producto> productos, Set<Reporte> reportes, Set<ValoracionVendedor> valoracionVendedorsForIdvendedor,
			Set<ValoracionVendedor> valoracionVendedorsForIdcomprador, Set<Factura> facturas,
			Set<PersonaDireccion> personaDireccions, Set<Pedido> pedidos) {
		this.usuario = usuario;
		this.nombre = nombre;
		this.apellido = apellido;
		this.telefono = telefono;
		this.foto = foto;
		this.correo = correo;
		this.numeroRuc = numeroRuc;
		this.productoFavoritos = productoFavoritos;
		this.personaRols = personaRols;
		this.productos = productos;
		this.reportes = reportes;
		this.valoracionVendedorsForIdvendedor = valoracionVendedorsForIdvendedor;
		this.valoracionVendedorsForIdcomprador = valoracionVendedorsForIdcomprador;
		this.facturas = facturas;
		this.personaDireccions = personaDireccions;
		this.pedidos = pedidos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idpersona", unique = true, nullable = false)
	public Integer getIdpersona() {
		return this.idpersona;
	}

	public void setIdpersona(Integer idpersona) {
		this.idpersona = idpersona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "nombre", length = 45)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellido", length = 45)
	public String getApellido() {
		return this.apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	@Column(name = "telefono", length = 9)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "foto", length = 45)
	public String getFoto() {
		return this.foto;
	}

	public void setFoto(String foto) {
		this.foto = foto;
	}

	@Column(name = "correo", nullable = false, length = 45)
	public String getCorreo() {
		return this.correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}

	@Column(name = "numero_ruc", length = 11)
	public String getNumeroRuc() {
		return this.numeroRuc;
	}

	public void setNumeroRuc(String numeroRuc) {
		this.numeroRuc = numeroRuc;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<ProductoFavorito> getProductoFavoritos() {
		return this.productoFavoritos;
	}

	public void setProductoFavoritos(Set<ProductoFavorito> productoFavoritos) {
		this.productoFavoritos = productoFavoritos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<PersonaRol> getPersonaRols() {
		return this.personaRols;
	}

	public void setPersonaRols(Set<PersonaRol> personaRols) {
		this.personaRols = personaRols;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Producto> getProductos() {
		return this.productos;
	}

	public void setProductos(Set<Producto> productos) {
		this.productos = productos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Reporte> getReportes() {
		return this.reportes;
	}

	public void setReportes(Set<Reporte> reportes) {
		this.reportes = reportes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdvendedor")
	public Set<ValoracionVendedor> getValoracionVendedorsForIdvendedor() {
		return this.valoracionVendedorsForIdvendedor;
	}

	public void setValoracionVendedorsForIdvendedor(Set<ValoracionVendedor> valoracionVendedorsForIdvendedor) {
		this.valoracionVendedorsForIdvendedor = valoracionVendedorsForIdvendedor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdcomprador")
	public Set<ValoracionVendedor> getValoracionVendedorsForIdcomprador() {
		return this.valoracionVendedorsForIdcomprador;
	}

	public void setValoracionVendedorsForIdcomprador(Set<ValoracionVendedor> valoracionVendedorsForIdcomprador) {
		this.valoracionVendedorsForIdcomprador = valoracionVendedorsForIdcomprador;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Factura> getFacturas() {
		return this.facturas;
	}

	public void setFacturas(Set<Factura> facturas) {
		this.facturas = facturas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<PersonaDireccion> getPersonaDireccions() {
		return this.personaDireccions;
	}

	public void setPersonaDireccions(Set<PersonaDireccion> personaDireccions) {
		this.personaDireccions = personaDireccions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	}

}
